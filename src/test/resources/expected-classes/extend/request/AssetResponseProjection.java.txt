import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseField;
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseProjection;

/**
 * Response projection for Asset
 */
@javax.annotation.Generated(
    value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
    date = "2020-12-31T23:59:59-0500"
)
public class AssetResponseProjection extends GraphQLResponseProjection {

    public AssetResponseProjection() {
    }

    @Override
    public AssetResponseProjection all$() {
        return all$(3);
    }

    @Override
    public AssetResponseProjection all$(int maxDepth) {
        this.name();
        this.status();
        this.id();
        this.createdBy();
        this.typename();
        return this;
    }

    public AssetResponseProjection name() {
        return name(null);
    }

    public AssetResponseProjection name(String alias) {
        fields.add(new GraphQLResponseField("name").alias(alias));
        return this;
    }

    public AssetResponseProjection status() {
        return status(null);
    }

    public AssetResponseProjection status(String alias) {
        fields.add(new GraphQLResponseField("status").alias(alias));
        return this;
    }

    public AssetResponseProjection id() {
        return id(null);
    }

    public AssetResponseProjection id(String alias) {
        fields.add(new GraphQLResponseField("id").alias(alias));
        return this;
    }

    public AssetResponseProjection createdBy() {
        return createdBy(null);
    }

    public AssetResponseProjection createdBy(String alias) {
        fields.add(new GraphQLResponseField("createdBy").alias(alias));
        return this;
    }

    public AssetResponseProjection typename() {
        return typename(null);
    }

    public AssetResponseProjection typename(String alias) {
        fields.add(new GraphQLResponseField("__typename").alias(alias));
        return this;
    }


}