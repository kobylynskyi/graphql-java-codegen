package com.github.graphql;

import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseField;
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseProjection;

/**
 * Response projection for Vehicle
 */
@javax.annotation.Generated(
    value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
    date = "2020-12-31T23:59:59-0500"
)
public class VehicleResponseProjection extends GraphQLResponseProjection {

    public VehicleResponseProjection() {
    }

    @Override
    public VehicleResponseProjection all$() {
        return all$(3);
    }

    @Override
    public VehicleResponseProjection all$(int maxDepth) {
        this.vehicleId();
        this.registrationNumber();
        if (projectionDepthOnFields.getOrDefault("VehicleResponseProjection.LocationResponseProjection.location", 0) <= maxDepth) {
            projectionDepthOnFields.put("VehicleResponseProjection.LocationResponseProjection.location", projectionDepthOnFields.getOrDefault("VehicleResponseProjection.LocationResponseProjection.location", 0) + 1);
            this.location(new LocationResponseProjection().all$(maxDepth - projectionDepthOnFields.getOrDefault("VehicleResponseProjection.LocationResponseProjection.location", 0)));
        }
        this.typename();
        return this;
    }

    public VehicleResponseProjection vehicleId() {
        return vehicleId(null);
    }

    public VehicleResponseProjection vehicleId(String alias) {
        fields.add(new GraphQLResponseField("vehicleId").alias(alias));
        return this;
    }

    public VehicleResponseProjection registrationNumber() {
        return registrationNumber(null);
    }

    public VehicleResponseProjection registrationNumber(String alias) {
        fields.add(new GraphQLResponseField("registrationNumber").alias(alias));
        return this;
    }

    public VehicleResponseProjection location(LocationResponseProjection subProjection) {
        return location(null, subProjection);
    }

    public VehicleResponseProjection location(String alias, LocationResponseProjection subProjection) {
        fields.add(new GraphQLResponseField("location").alias(alias).projection(subProjection));
        return this;
    }

    public VehicleResponseProjection typename() {
        return typename(null);
    }

    public VehicleResponseProjection typename(String alias) {
        fields.add(new GraphQLResponseField("__typename").alias(alias));
        return this;
    }


}