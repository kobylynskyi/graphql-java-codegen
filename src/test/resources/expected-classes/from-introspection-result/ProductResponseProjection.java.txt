package com.kobylynskyi.graphql.test1;

import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseField;
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseProjection;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

/**
 * Response projection for Product
 */
@javax.annotation.Generated(
    value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
    date = "2020-12-31T23:59:59-0500"
)
public class ProductResponseProjection extends GraphQLResponseProjection {

    private final Map<String, Integer> projectionDepthOnFields = new HashMap<>();

    public ProductResponseProjection() {
    }

    public ProductResponseProjection(ProductResponseProjection projection) {
        super(projection);
    }

    public ProductResponseProjection(List<ProductResponseProjection> projections) {
        super(projections);
    }

    public ProductResponseProjection all$() {
        return all$(3);
    }

    public ProductResponseProjection all$(int maxDepth) {
        this.id();
        this.title();
        this.description();
        this.price();
        this.sku();
        this.stockStatus();
        this.addedDateTime();
        this.typename();
        return this;
    }

    public ProductResponseProjection id() {
        return id(null);
    }

    public ProductResponseProjection id(String alias) {
        add$(new GraphQLResponseField("id").alias(alias));
        return this;
    }

    public ProductResponseProjection title() {
        return title(null);
    }

    public ProductResponseProjection title(String alias) {
        add$(new GraphQLResponseField("title").alias(alias));
        return this;
    }

    public ProductResponseProjection description() {
        return description(null);
    }

    public ProductResponseProjection description(String alias) {
        add$(new GraphQLResponseField("description").alias(alias));
        return this;
    }

    public ProductResponseProjection price() {
        return price(null);
    }

    public ProductResponseProjection price(String alias) {
        add$(new GraphQLResponseField("price").alias(alias));
        return this;
    }

    public ProductResponseProjection sku() {
        return sku(null);
    }

    public ProductResponseProjection sku(String alias) {
        add$(new GraphQLResponseField("sku").alias(alias));
        return this;
    }

    public ProductResponseProjection stockStatus() {
        return stockStatus(null);
    }

    public ProductResponseProjection stockStatus(String alias) {
        add$(new GraphQLResponseField("stockStatus").alias(alias));
        return this;
    }

    public ProductResponseProjection addedDateTime() {
        return addedDateTime(null);
    }

    public ProductResponseProjection addedDateTime(String alias) {
        add$(new GraphQLResponseField("addedDateTime").alias(alias));
        return this;
    }

    public ProductResponseProjection typename() {
        return typename(null);
    }

    public ProductResponseProjection typename(String alias) {
        add$(new GraphQLResponseField("__typename").alias(alias));
        return this;
    }

    @Override
    public ProductResponseProjection deepCopy$() {
        return new ProductResponseProjection(this);
    }


}