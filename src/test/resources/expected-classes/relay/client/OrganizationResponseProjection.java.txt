import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseField;
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseProjection;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

/**
 * Response projection for Organization
 */
@javax.annotation.Generated(
    value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
    date = "2020-12-31T23:59:59-0500"
)
public class OrganizationResponseProjection extends GraphQLResponseProjection {

    private final Map<String, Integer> projectionDepthOnFields = new HashMap<>();

    public OrganizationResponseProjection() {
    }

    public OrganizationResponseProjection(OrganizationResponseProjection projection) {
        super(projection);
    }

    public OrganizationResponseProjection(List<OrganizationResponseProjection> projections) {
        super(projections);
    }

    public OrganizationResponseProjection all$() {
        return all$(3);
    }

    public OrganizationResponseProjection all$(int maxDepth) {
        this.id();
        this.typename();
        return this;
    }

    public OrganizationResponseProjection id() {
        return id(null);
    }

    public OrganizationResponseProjection id(String alias) {
        add$(new GraphQLResponseField("id").alias(alias));
        return this;
    }

    public OrganizationResponseProjection typename() {
        return typename(null);
    }

    public OrganizationResponseProjection typename(String alias) {
        add$(new GraphQLResponseField("__typename").alias(alias));
        return this;
    }

    @Override
    public OrganizationResponseProjection deepCopy$() {
        return new OrganizationResponseProjection(this);
    }


}