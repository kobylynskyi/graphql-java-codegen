package com.github.graphql;

import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLResponseProjection;
import java.util.Objects;

/**
 * Response projection for CodeOfConduct
 */
public class CodeOfConductResponseProjection extends GraphQLResponseProjection {

    public CodeOfConductResponseProjection() {
    }

    public CodeOfConductResponseProjection body() {
        fields.put("body", null);
        return this;
    }

    public CodeOfConductResponseProjection id() {
        fields.put("id", null);
        return this;
    }

    public CodeOfConductResponseProjection key() {
        fields.put("key", null);
        return this;
    }

    public CodeOfConductResponseProjection name() {
        fields.put("name", null);
        return this;
    }

    public CodeOfConductResponseProjection resourcePath() {
        fields.put("resourcePath", null);
        return this;
    }

    public CodeOfConductResponseProjection url() {
        fields.put("url", null);
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        final CodeOfConductResponseProjection that = (CodeOfConductResponseProjection) obj;
        return Objects.equals(fields, that.fields) && Objects.equals(parametrizedInputs, that.parametrizedInputs);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fields, parametrizedInputs);
    }

}