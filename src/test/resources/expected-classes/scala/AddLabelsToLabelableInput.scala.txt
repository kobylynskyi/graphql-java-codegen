package com.github.graphql

import scala.beans.BeanProperty
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLRequestSerializer
import java.util.Objects
import java.util.StringJoiner

@javax.annotation.Generated(
    value = Array("com.kobylynskyi.graphql.codegen.GraphQLCodegen"),
    date = "2020-12-31T23:59:59-0500"
)
case class AddLabelsToLabelableInput(
    @BeanProperty clientMutationId: String,
    @javax.validation.constraints.NotNull
    @BeanProperty labelIds: Seq[String],
    @javax.validation.constraints.NotNull
    @BeanProperty labelableId: String
) {

    override def toString(): String = {
        val joiner = new StringJoiner(", ", "{ ", " }")
        if (clientMutationId != null) {
            joiner.add("clientMutationId: " + GraphQLRequestSerializer.getEntry(clientMutationId))
        }
        if (labelIds != null) {
            joiner.add("labelIds: " + GraphQLRequestSerializer.getEntry(labelIds))
        }
        if (labelableId != null) {
            joiner.add("labelableId: " + GraphQLRequestSerializer.getEntry(labelableId))
        }
        joiner.toString
    }
}

object AddLabelsToLabelableInput {

    def builder(): AddLabelsToLabelableInput.Builder = new Builder()

    class Builder {

        private var clientMutationId: String = _
        private var labelIds: Seq[String] = _
        private var labelableId: String = _

        def setClientMutationId(clientMutationId: String): Builder = {
            this.clientMutationId = clientMutationId
            this
        }

        def setLabelIds(labelIds: Seq[String]): Builder = {
            this.labelIds = labelIds
            this
        }

        def setLabelableId(labelableId: String): Builder = {
            this.labelableId = labelableId
            this
        }

        def build(): AddLabelsToLabelableInput = AddLabelsToLabelableInput(clientMutationId, labelIds, labelableId)

    }
}
