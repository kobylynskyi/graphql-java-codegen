package com.github.graphql

import scala.beans.BeanProperty
import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLRequestSerializer
import java.util.Objects
import java.util.StringJoiner

@javax.annotation.Generated(
    value = Array("com.kobylynskyi.graphql.codegen.GraphQLCodegen"),
    date = "2020-12-31T23:59:59-0500"
)
case class AddLabelsToLabelablePayload(
    @BeanProperty clientMutationId: String,
    @BeanProperty labelable: Labelable
) {

    override def toString(): String = {
        val joiner = new StringJoiner(", ", "{ ", " }")
        if (clientMutationId != null) {
            joiner.add("clientMutationId: " + GraphQLRequestSerializer.getEntry(clientMutationId))
        }
        if (labelable != null) {
            joiner.add("labelable: " + GraphQLRequestSerializer.getEntry(labelable))
        }
        joiner.toString
    }
}

object AddLabelsToLabelablePayload {

    def builder(): AddLabelsToLabelablePayload.Builder = new Builder()

    class Builder {

        private var clientMutationId: String = _
        private var labelable: Labelable = _

        def setClientMutationId(clientMutationId: String): Builder = {
            this.clientMutationId = clientMutationId
            this
        }

        def setLabelable(labelable: Labelable): Builder = {
            this.labelable = labelable
            this
        }

        def build(): AddLabelsToLabelablePayload = AddLabelsToLabelablePayload(clientMutationId, labelable)

    }
}
